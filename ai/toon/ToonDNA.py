from panda3d.core import VBase4
from panda3d.core import Datagram, DatagramIterator
import random

from dataclasses import dataclass

toonHeadTypes = [
    'dls',
    'dss',
    'dsl',
    'dll',
    'cls',
    'css',
    'csl',
    'cll',
    'hls',
    'hss',
    'hsl',
    'hll',
    'mls',
    'mss',
    'rls',
    'rss',
    'rsl',
    'rll',
    'fls',
    'fss',
    'fsl',
    'fll',
    'pls',
    'pss',
    'psl',
    'pll',
    'bls',
    'bss',
    'bsl',
    'bll',
    'sls',
    'sss',
    'ssl',
    'sll'
]

toonTorsoTypes = ['ss', 'ms', 'ls', 'sd', 'md', 'ld', 's', 'm', 'l']
toonLegTypes = ['s', 'm', 'l']

ShirtStyles = {'bss1': [0, 0, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (10, 10),
           (11, 11),
           (12, 12),
           (27, 27)]],
 'bss2': [1, 1, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (10, 10),
           (11, 11),
           (12, 12)]],
 'bss3': [2, 2, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (10, 10),
           (11, 11),
           (12, 12)]],
 'bss4': [3, 3, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (10, 10),
           (11, 11),
           (12, 12)]],
 'bss5': [4, 4, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (9, 9),
           (10, 10),
           (11, 11),
           (12, 12)]],
 'bss6': [5, 5, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (10, 10),
           (11, 11),
           (12, 12)]],
 'bss7': [8, 8, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (27, 27)]],
 'bss8': [9, 9, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (10, 10),
           (11, 11),
           (12, 12)]],
 'bss9': [10, 0, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (10, 10),
           (11, 11),
           (12, 12),
           (27, 27)]],
 'bss10': [11, 0, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12),
            (27, 27)]],
 'bss11': [14, 10, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12)]],
 'bss12': [16, 0, [(27, 27),
            (27, 4),
            (27, 5),
            (27, 6),
            (27, 7),
            (27, 8),
            (27, 9)]],
 'bss13': [17, 0, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12)]],
 'bss14': [18, 12, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (8, 8),
            (9, 9),
            (11, 11),
            (12, 12),
            (27, 27)]],
 'bss15': [19, 13, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12),
            (27, 27)]],
 'gss1': [0, 0, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (21, 21),
           (22, 22),
           (23, 23),
           (24, 24),
           (25, 25),
           (26, 26),
           (27, 27)]],
 'gss2': [1, 1, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (21, 21),
           (22, 22),
           (23, 23),
           (24, 24),
           (25, 25),
           (26, 26)]],
 'gss3': [2, 2, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (21, 21),
           (22, 22),
           (23, 23),
           (24, 24),
           (25, 25),
           (26, 26)]],
 'gss4': [3, 3, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (21, 21),
           (22, 22),
           (23, 23),
           (24, 24),
           (25, 25),
           (26, 26)]],
 'gss5': [5, 5, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (21, 21),
           (22, 22),
           (23, 23),
           (24, 24),
           (25, 25),
           (26, 26)]],
 'gss6': [6, 6, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (21, 21),
           (22, 22),
           (23, 23),
           (24, 24),
           (25, 25),
           (26, 26)]],
 'gss7': [7, 7, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (21, 21),
           (22, 22),
           (23, 23),
           (24, 24),
           (25, 25),
           (26, 26)]],
 'gss8': [9, 9, [(0, 0),
           (1, 1),
           (2, 2),
           (3, 3),
           (4, 4),
           (5, 5),
           (6, 6),
           (7, 7),
           (8, 8),
           (9, 9),
           (11, 11),
           (12, 12),
           (21, 21),
           (22, 22),
           (23, 23),
           (24, 24),
           (25, 25),
           (26, 26)]],
 'gss9': [12, 0, [(27, 27)]],
 'gss10': [13, 11, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12),
            (21, 21),
            (22, 22),
            (23, 23),
            (24, 24),
            (25, 25),
            (26, 26)]],
 'gss11': [15, 11, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12),
            (21, 21),
            (22, 22),
            (23, 23),
            (24, 24),
            (25, 25),
            (26, 26)]],
 'gss12': [16, 0, [(27, 27),
            (27, 4),
            (27, 5),
            (27, 6),
            (27, 7),
            (27, 8),
            (27, 9)]],
 'gss13': [20, 0, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12),
            (21, 21),
            (22, 22),
            (23, 23),
            (24, 24),
            (25, 25),
            (26, 26)]],
 'gss14': [21, 0, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12),
            (21, 21),
            (22, 22),
            (23, 23),
            (24, 24),
            (25, 25),
            (26, 26)]],
 'gss15': [22, 0, [(0, 0),
            (1, 1),
            (2, 2),
            (3, 3),
            (4, 4),
            (5, 5),
            (6, 6),
            (7, 7),
            (8, 8),
            (9, 9),
            (10, 10),
            (11, 11),
            (12, 12),
            (21, 21),
            (22, 22),
            (23, 23),
            (24, 24),
            (25, 25),
            (26, 26)]],
 'c_ss1': [25, 16, [(27, 27)]],
 'c_ss2': [27, 18, [(27, 27)]],
 'c_ss3': [38, 27, [(27, 27)]],
 'c_bss1': [26, 17, [(27, 27)]],
 'c_bss2': [28, 19, [(27, 27)]],
 'c_bss3': [37, 26, [(27, 27)]],
 'c_bss4': [39, 28, [(27, 27)]],
 'c_gss1': [23, 14, [(27, 27)]],
 'c_gss2': [24, 15, [(27, 27)]],
 'c_gss3': [35, 24, [(27, 27)]],
 'c_gss4': [36, 25, [(27, 27)]],
 'c_gss5': [40, 29, [(27, 27)]],
 'c_ss4': [45, 34, [(27, 27)]],
 'c_ss5': [46, 35, [(27, 27)]],
 'c_ss6': [52, 41, [(27, 27)]],
 'c_ss7': [53, 42, [(27, 27)]],
 'c_ss8': [54, 43, [(27, 27)]],
 'c_ss9': [55, 44, [(27, 27)]],
 'c_ss10': [56, 45, [(27, 27)]],
 'c_ss11': [57, 46, [(27, 27)]],
 'hw_ss1': [29, 20, [(27, 27)]],
 'hw_ss2': [30, 21, [(27, 27)]],
 'hw_ss3': [114, 101, [(27, 27)]],
 'hw_ss4': [115, 102, [(27, 27)]],
 'hw_ss5': [122, 109, [(27, 27)]],
 'hw_ss6': [123, 110, [(27, 27)]],
 'hw_ss7': [124, 111, [(27, 27)]],
 'hw_ss8': [125, 112, [(27, 27)]],
 'hw_ss9': [126, 113, [(27, 27)]],
 'wh_ss1': [31, 22, [(27, 27)]],
 'wh_ss2': [32, 22, [(27, 27)]],
 'wh_ss3': [33, 23, [(27, 27)]],
 'wh_ss4': [34, 23, [(27, 27)]],
 'vd_ss1': [41, 30, [(27, 27)]],
 'vd_ss2': [42, 31, [(27, 27)]],
 'vd_ss3': [43, 32, [(27, 27)]],
 'vd_ss4': [44, 33, [(27, 27)]],
 'vd_ss5': [69, 58, [(27, 27)]],
 'vd_ss6': [70, 59, [(27, 27)]],
 'vd_ss7': [96, 85, [(27, 27)]],
 'sd_ss1': [47, 36, [(27, 27)]],
 'sd_ss2': [48, 37, [(27, 27)]],
 'sd_ss3': [116, 103, [(27, 27)]],
 'tc_ss1': [49, 38, [(27, 27)]],
 'tc_ss2': [50, 39, [(27, 27)]],
 'tc_ss3': [51, 40, [(27, 27)]],
 'tc_ss4': [62, 51, [(27, 27)]],
 'tc_ss5': [63, 52, [(27, 27)]],
 'tc_ss6': [64, 53, [(27, 27)]],
 'tc_ss7': [65, 54, [(27, 27)]],
 'j4_ss1': [58, 47, [(27, 27)]],
 'j4_ss2': [59, 48, [(27, 27)]],
 'c_ss12': [60, 49, [(27, 27)]],
 'c_ss13': [61, 50, [(27, 27)]],
 'pj_ss1': [66, 55, [(27, 27)]],
 'pj_ss2': [67, 56, [(27, 27)]],
 'pj_ss3': [68, 57, [(27, 27)]],
 'sa_ss1': [71, 60, [(27, 27)]],
 'sa_ss2': [72, 61, [(27, 27)]],
 'sa_ss3': [73, 62, [(27, 27)]],
 'sa_ss4': [74, 63, [(27, 27)]],
 'sa_ss5': [75, 64, [(27, 27)]],
 'sa_ss6': [76, 65, [(27, 27)]],
 'sa_ss7': [77, 66, [(27, 27)]],
 'sa_ss8': [78, 67, [(27, 27)]],
 'sa_ss9': [79, 68, [(27, 27)]],
 'sa_ss10': [80, 69, [(27, 27)]],
 'sa_ss11': [81, 70, [(27, 27)]],
 'sa_ss12': [82, 71, [(27, 27)]],
 'sa_ss13': [83, 72, [(27, 27)]],
 'sa_ss14': [84, 73, [(27, 27)]],
 'sa_ss15': [85, 74, [(27, 27)]],
 'sa_ss16': [86, 75, [(27, 27)]],
 'sa_ss17': [87, 76, [(27, 27)]],
 'sa_ss18': [88, 77, [(27, 27)]],
 'sa_ss19': [89, 78, [(27, 27)]],
 'sa_ss20': [90, 79, [(27, 27)]],
 'sa_ss21': [91, 80, [(27, 27)]],
 'sa_ss22': [92, 81, [(27, 27)]],
 'sa_ss23': [93, 82, [(27, 27)]],
 'sa_ss24': [94, 83, [(27, 27)]],
 'sa_ss25': [95, 84, [(27, 27)]],
 'sa_ss26': [106, 93, [(27, 27)]],
 'sa_ss27': [110, 97, [(27, 27)]],
 'sa_ss28': [111, 98, [(27, 27)]],
 'sa_ss29': [120, 107, [(27, 27)]],
 'sa_ss30': [121, 108, [(27, 27)]],
 'sa_ss31': [118, 105, [(27, 27)]],
 'sa_ss32': [127, 114, [(27, 27)]],
 'sa_ss33': [128, 115, [(27, 27)]],
 'sa_ss34': [129, 116, [(27, 27)]],
 'sa_ss35': [130, 117, [(27, 27)]],
 'sa_ss36': [131, 118, [(27, 27)]],
 'sa_ss37': [132, 119, [(27, 27)]],
 'sa_ss38': [133, 120, [(27, 27)]],
 'sa_ss39': [134, 121, [(27, 27)]],
 'sa_ss40': [135, 122, [(27, 27)]],
 'sa_ss41': [136, 123, [(27, 27)]],
 'sa_ss42': [137, 124, [(27, 27)]],
 'sa_ss43': [138, 125, [(27, 27)]],
 'sa_ss44': [139, 126, [(27, 27)]],
 'sa_ss45': [140, 127, [(27, 27)]],
 'sa_ss46': [141, 128, [(27, 27)]],
 'sa_ss47': [142, 129, [(27, 27)]],
 'sa_ss48': [143, 130, [(27, 27)]],
 'sa_ss49': [144, 116, [(27, 27)]],
 'sa_ss50': [145, 131, [(27, 27)]],
 'sa_ss51': [146, 133, [(27, 27)]],
 'sa_ss52': [147, 134, [(27, 27)]],
 'sa_ss53': [148, 135, [(27, 27)]],
 'sa_ss54': [149, 136, [(27, 27)]],
 'sa_ss55': [150, 137, [(27, 27)]],
 'sc_1': [97, 86, [(27, 27)]],
 'sc_2': [98, 86, [(27, 27)]],
 'sc_3': [99, 86, [(27, 27)]],
 'sil_1': [100, 87, [(27, 27)]],
 'sil_2': [101, 88, [(27, 27)]],
 'sil_3': [102, 89, [(27, 27)]],
 'sil_4': [103, 90, [(27, 27)]],
 'sil_5': [104, 91, [(27, 27)]],
 'sil_6': [105, 92, [(27, 27)]],
 'sil_7': [107, 94, [(27, 27)]],
 'sil_8': [108, 95, [(27, 27)]],
 'emb_us1': [103, 90, [(27, 27)]],
 'emb_us2': [100, 87, [(27, 27)]],
 'emb_us3': [101, 88, [(27, 27)]],
 'sb_1': [109, 96, [(27, 27)]],
 'jb_1': [112, 99, [(27, 27)]],
 'jb_2': [113, 100, [(27, 27)]],
 'ugcms': [117, 104, [(27, 27)]],
 'lb_1': [119, 106, [(27, 27)]]
}

BottomStyles = {'bbs1': [0, [0,
           1,
           2,
           4,
           6,
           9,
           10,
           11,
           12,
           13,
           14,
           15,
           16,
           17,
           18,
           19,
           20]],
 'bbs2': [1, [0,
           1,
           2,
           4,
           6,
           9,
           10,
           11,
           12,
           13,
           14,
           15,
           16,
           17,
           18,
           19,
           20]],
 'bbs3': [2, [0,
           1,
           2,
           4,
           6,
           9,
           10,
           11,
           12,
           13,
           14,
           15,
           16,
           17,
           18,
           19,
           20]],
 'bbs4': [3, [0,
           1,
           2,
           4,
           6,
           8,
           9,
           11,
           12,
           13,
           15,
           16,
           17,
           18,
           19,
           20,
           27]],
 'bbs5': [4, [0,
           1,
           2,
           4,
           6,
           9,
           10,
           11,
           12,
           13,
           14,
           15,
           16,
           17,
           18,
           19,
           20]],
 'bbs6': [5, [0,
           1,
           2,
           4,
           6,
           9,
           10,
           11,
           12,
           14,
           15,
           16,
           17,
           18,
           19,
           20,
           27]],
 'bbs7': [6, [0,
           1,
           2,
           4,
           6,
           9,
           10,
           11,
           12,
           13,
           14,
           15,
           16,
           17,
           18,
           20,
           27]],
 'bbs8': [7, [0,
           1,
           2,
           4,
           6,
           9,
           10,
           11,
           12,
           13,
           14,
           15,
           16,
           17,
           18,
           19,
           20,
           27]],
 'vd_bs1': [8, [27]],
 'vd_bs2': [23, [27]],
 'vd_bs3': [24, [27]],
 'c_bs1': [9, [27]],
 'c_bs2': [10, [27]],
 'c_bs5': [15, [27]],
 'sd_bs1': [11, [27]],
 'sd_bs2': [44, [27]],
 'pj_bs1': [16, [27]],
 'pj_bs2': [17, [27]],
 'pj_bs3': [18, [27]],
 'wh_bs1': [19, [27]],
 'wh_bs2': [20, [27]],
 'wh_bs3': [21, [27]],
 'wh_bs4': [22, [27]],
 'hw_bs1': [47, [27]],
 'hw_bs2': [48, [27]],
 'hw_bs5': [49, [27]],
 'hw_bs6': [50, [27]],
 'hw_bs7': [51, [27]],
 'gsk1': [0, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26,
           27]],
 'gsk2': [1, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26]],
 'gsk3': [2, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26]],
 'gsk4': [3, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26]],
 'gsk5': [4, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26]],
 'gsk6': [7, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26,
           27]],
 'gsk7': [8, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26,
           27]],
 'gsh1': [5, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26,
           27]],
 'gsh2': [6, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26,
           27]],
 'gsh3': [9, [0,
           1,
           2,
           3,
           4,
           5,
           6,
           7,
           8,
           9,
           11,
           12,
           21,
           22,
           23,
           24,
           25,
           26,
           27]],
 'c_gsk1': [10, [27]],
 'c_gsk2': [11, [27]],
 'c_gsk3': [12, [27]],
 'vd_gs1': [13, [27]],
 'vd_gs2': [27, [27]],
 'vd_gs3': [28, [27]],
 'c_gsk4': [14, [27]],
 'sd_gs1': [15, [27]],
 'sd_gs2': [48, [27]],
 'c_gsk5': [16, [27]],
 'c_gsk6': [17, [27]],
 'c_bs3': [12, [27]],
 'c_bs4': [13, [27]],
 'j4_bs1': [14, [27]],
 'j4_gs1': [18, [27]],
 'c_gsk7': [19, [27]],
 'pj_gs1': [20, [27]],
 'pj_gs2': [21, [27]],
 'pj_gs3': [22, [27]],
 'wh_gsk1': [23, [27]],
 'wh_gsk2': [24, [27]],
 'wh_gsk3': [25, [27]],
 'wh_gsk4': [26, [27]],
 'sa_bs1': [25, [27]],
 'sa_bs2': [26, [27]],
 'sa_bs3': [27, [27]],
 'sa_bs4': [28, [27]],
 'sa_bs5': [29, [27]],
 'sa_bs6': [30, [27]],
 'sa_bs7': [31, [27]],
 'sa_bs8': [32, [27]],
 'sa_bs9': [33, [27]],
 'sa_bs10': [34, [27]],
 'sa_bs11': [35, [27]],
 'sa_bs12': [36, [27]],
 'sa_bs13': [41, [27]],
 'sa_bs14': [46, [27]],
 'sa_bs15': [45, [27]],
 'sa_bs16': [52, [27]],
 'sa_bs17': [53, [27]],
 'sa_bs18': [54, [27]],
 'sa_bs19': [55, [27]],
 'sa_bs20': [56, [27]],
 'sa_bs21': [57, [27]],
 'sa_gs1': [29, [27]],
 'sa_gs2': [30, [27]],
 'sa_gs3': [31, [27]],
 'sa_gs4': [32, [27]],
 'sa_gs5': [33, [27]],
 'sa_gs6': [34, [27]],
 'sa_gs7': [35, [27]],
 'sa_gs8': [36, [27]],
 'sa_gs9': [37, [27]],
 'sa_gs10': [38, [27]],
 'sa_gs11': [39, [27]],
 'sa_gs12': [40, [27]],
 'sa_gs13': [45, [27]],
 'sa_gs14': [50, [27]],
 'sa_gs15': [49, [27]],
 'sa_gs16': [57, [27]],
 'sa_gs17': [58, [27]],
 'sa_gs18': [59, [27]],
 'sa_gs19': [60, [27]],
 'sa_gs20': [61, [27]],
 'sa_gs21': [62, [27]],
 'sc_bs1': [37, [27]],
 'sc_bs2': [38, [27]],
 'sc_bs3': [39, [27]],
 'sc_gs1': [41, [27]],
 'sc_gs2': [42, [27]],
 'sc_gs3': [43, [27]],
 'sil_bs1': [40, [27]],
 'sil_gs1': [44, [27]],
 'hw_bs3': [42, [27]],
 'hw_gs3': [46, [27]],
 'hw_bs4': [43, [27]],
 'hw_gs4': [47, [27]],
 'hw_gs1': [51, [27]],
 'hw_gs2': [52, [27]],
 'hw_gs5': [54, [27]],
 'hw_gs6': [55, [27]],
 'hw_gs7': [56, [27]],
 'hw_gsk1': [53, [27]]}

HatStyles = {'none': [0, 0, 0],
 'hbb1': [1, 0, 0],
 'hsf1': [2, 0, 0],
 'hsf2': [2, 5, 0],
 'hsf3': [2, 6, 0],
 'hht1': [4, 0, 0],
 'hht2': [4, 3, 0],
 'htp1': [5, 0, 0],
 'htp2': [5, 4, 0],
 'hav1': [6, 0, 0],
 'hfp1': [7, 0, 0],
 'hsg1': [8, 0, 0],
 'hwt1': [9, 0, 0],
 'hfz1': [10, 0, 0],
 'hgf1': [11, 0, 0],
 'hpt1': [12, 0, 0],
 'hpt2': [12, 19, 0],
 'hpb1': [13, 0, 0],
 'hcr1': [14, 0, 0],
 'hbb2': [1, 7, 0],
 'hbb3': [1, 8, 0],
 'hcw1': [15, 0, 0],
 'hpr1': [16, 0, 0],
 'hpp1': [17, 0, 0],
 'hfs1': [18, 0, 0],
 'hsb1': [19, 0, 0],
 'hst1': [20, 0, 0],
 'hat1': [22, 0, 0],
 'hhd1': [23, 0, 0],
 'hbw1': [24, 0, 0],
 'hch1': [25, 0, 0],
 'hdt1': [26, 0, 0],
 'hft1': [27, 0, 0],
 'hfd1': [28, 0, 0],
 'hmk1': [29, 0, 0],
 'hft2': [30, 0, 0],
 'hhd2': [31, 0, 0],
 'hrh1': [33, 0, 0],
 'hhm1': [34, 0, 0],
 'hat2': [35, 0, 0],
 'htr1': [36, 0, 0],
 'hhm2': [37, 0, 0],
 'hwz1': [38, 0, 0],
 'hwz2': [39, 0, 0],
 'hhm3': [40, 0, 0],
 'hhm4': [41, 0, 0],
 'hfp2': [42, 0, 0],
 'hhm5': [43, 0, 0],
 'hnp1': [44, 0, 0],
 'hpc2': [45, 0, 0],
 'hph1': [46, 0, 0],
 'hwg1': [47, 0, 0],
 'hbb4': [1, 13, 0],
 'hbb5': [1, 14, 0],
 'hbb6': [1, 15, 0],
 'hsl1': [48, 0, 0],
 'hfr1': [49, 0, 0],
 'hby1': [50, 0, 0],
 'hjh1': [51, 0, 0],
 'hbb7': [1, 17, 0],
 'hwt2': [52, 0, 0],
 'hhw2': [54, 0, 0],
 'hob1': [55, 0, 0],
 'hbn1': [56, 0, 0],
 'hrb1': [3, 0, 0],
 'hrb2': [3, 1, 0],
 'hrb3': [3, 2, 0],
 'hsu1': [21, 0, 0],
 'hrb4': [3, 9, 0],
 'hrb5': [3, 10, 0],
 'hrb6': [3, 11, 0],
 'hrb7': [3, 12, 0],
 'hpc1': [32, 0, 0],
 'hrb8': [3, 16, 0],
 'hrb9': [3, 18, 0],
 'hhw1': [53, 0, 0]}
GlassesStyles = {'none': [0, 0, 0],
 'grd1': [1, 0, 0],
 'gmb1': [2, 0, 0],
 'gnr1': [3, 0, 0],
 'gst1': [4, 0, 0],
 'g3d1': [5, 0, 0],
 'gav1': [6, 0, 0],
 'gjo1': [9, 0, 0],
 'gsb1': [10, 0, 0],
 'ggl1': [11, 0, 0],
 'ggm1': [12, 0, 0],
 'ghg1': [13, 0, 0],
 'gie1': [14, 0, 0],
 'gmt1': [15, 0, 0],
 'gmt2': [15, 1, 0],
 'gmt3': [16, 0, 0],
 'gmt4': [16, 2, 0],
 'gmt5': [16, 3, 0],
 'gmn1': [17, 0, 0],
 'gmo1': [18, 0, 0],
 'gsr1': [19, 0, 0],
 'gce1': [7, 0, 0],
 'gdk1': [8, 0, 0],
 'gag1': [21, 0, 0],
 'ghw1': [20, 0, 0],
 'ghw2': [20, 4, 0]}
BackpackStyles = {'none': [0, 0, 0],
 'bpb1': [1, 0, 0],
 'bpb2': [1, 1, 0],
 'bpb3': [1, 2, 0],
 'bpd1': [1, 3, 0],
 'bpd2': [1, 4, 0],
 'bwg1': [2, 0, 0],
 'bwg2': [3, 0, 0],
 'bwg3': [4, 0, 0],
 'bst1': [5, 0, 0],
 'bfn1': [6, 0, 0],
 'baw1': [7, 0, 0],
 'baw2': [7, 5, 0],
 'bwt1': [8, 0, 0],
 'bwg4': [9, 0, 0],
 'bwg5': [9, 6, 0],
 'bwg6': [10, 0, 0],
 'bjp1': [11, 0, 0],
 'blg1': [12, 0, 0],
 'bsa1': [13, 0, 0],
 'bwg7': [14, 0, 0],
 'bsa2': [15, 0, 0],
 'bsa3': [16, 0, 0],
 'bap1': [17, 0, 0],
 'bhw1': [18, 0, 0],
 'bhw2': [19, 0, 0],
 'bhw3': [20, 0, 0],
 'bhw4': [21, 0, 0],
 'bob1': [22, 0, 0],
 'bfg1': [23, 0, 0],
 'bfl1': [24, 0, 0]}
ShoesStyles = {'none': [0, 0, 0],
 'sat1': [1, 0, 0],
 'sat2': [1, 1, 0],
 'smb1': [3, 2, 0],
 'scs1': [2, 3, 0],
 'sdk1': [1, 6, 0],
 'sat3': [1, 7, 0],
 'scs2': [2, 8, 0],
 'scs3': [2, 9, 0],
 'scs4': [2, 10, 0],
 'scb1': [3, 11, 0],
 'sht1': [2, 13, 0],
 'ssb1': [3, 16, 0],
 'sts1': [1, 17, 0],
 'sts2': [1, 18, 0],
 'scs5': [2, 19, 0],
 'smb2': [3, 20, 0],
 'smb3': [3, 21, 0],
 'smb4': [3, 22, 0],
 'slf1': [1, 28, 0],
 'smt1': [3, 30, 0],
 'sox1': [1, 31, 0],
 'srb1': [3, 32, 0],
 'sst1': [3, 33, 0],
 'swb1': [3, 34, 0],
 'swb2': [3, 35, 0],
 'swk1': [2, 36, 0],
 'scs6': [2, 37, 0],
 'smb5': [3, 38, 0],
 'sht2': [2, 39, 0],
 'srb2': [3, 40, 0],
 'sts3': [1, 41, 0],
 'sts4': [1, 42, 0],
 'sts5': [1, 43, 0],
 'srb3': [3, 44, 0],
 'srb4': [3, 45, 0],
 'sat4': [1, 46, 0],
 'shw1': [3, 47, 0],
 'shw2': [3, 48, 0],
 'swt1': [1, 4, 0],
 'smj1': [2, 5, 0],
 'sfb1': [3, 12, 0],
 'smj2': [2, 14, 0],
 'smj3': [2, 15, 0],
 'sfb2': [3, 23, 0],
 'sfb3': [3, 24, 0],
 'sfb4': [3, 25, 0],
 'sfb5': [3, 26, 0],
 'sfb6': [3, 27, 0],
 'smj4': [2, 29, 0]}

SHORTS = 0
SKIRT = 1

HAT = 1
GLASSES = 2
BACKPACK = 4
SHOES = 8

defaultBoyColorList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
defaultGirlColorList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]

ClothesColors = [VBase4(0.933594, 0.265625, 0.28125, 1.0),
 VBase4(0.863281, 0.40625, 0.417969, 1.0),
 VBase4(0.710938, 0.234375, 0.4375, 1.0),
 VBase4(0.992188, 0.480469, 0.167969, 1.0),
 VBase4(0.996094, 0.898438, 0.320312, 1.0),
 VBase4(0.550781, 0.824219, 0.324219, 1.0),
 VBase4(0.242188, 0.742188, 0.515625, 1.0),
 VBase4(0.433594, 0.90625, 0.835938, 1.0),
 VBase4(0.347656, 0.820312, 0.953125, 1.0),
 VBase4(0.191406, 0.5625, 0.773438, 1.0),
 VBase4(0.285156, 0.328125, 0.726562, 1.0),
 VBase4(0.460938, 0.378906, 0.824219, 1.0),
 VBase4(0.546875, 0.28125, 0.75, 1.0),
 VBase4(0.570312, 0.449219, 0.164062, 1.0),
 VBase4(0.640625, 0.355469, 0.269531, 1.0),
 VBase4(0.996094, 0.695312, 0.511719, 1.0),
 VBase4(0.832031, 0.5, 0.296875, 1.0),
 VBase4(0.992188, 0.480469, 0.167969, 1.0),
 VBase4(0.550781, 0.824219, 0.324219, 1.0),
 VBase4(0.433594, 0.90625, 0.835938, 1.0),
 VBase4(0.347656, 0.820312, 0.953125, 1.0),
 VBase4(0.96875, 0.691406, 0.699219, 1.0),
 VBase4(0.996094, 0.957031, 0.597656, 1.0),
 VBase4(0.855469, 0.933594, 0.492188, 1.0),
 VBase4(0.558594, 0.589844, 0.875, 1.0),
 VBase4(0.726562, 0.472656, 0.859375, 1.0),
 VBase4(0.898438, 0.617188, 0.90625, 1.0),
 VBase4(1.0, 1.0, 1.0, 1.0),
 VBase4(0.0, 0.2, 0.956862, 1.0),
 VBase4(0.972549, 0.094117, 0.094117, 1.0),
 VBase4(0.447058, 0.0, 0.90196, 1.0)]

toonBodyScales = {
    'mouse': 0.6,
    'cat': 0.73,
    'duck': 0.66,
    'rabbit': 0.74,
    'horse': 0.85,
    'dog': 0.85,
    'monkey': 0.68,
    'bear': 0.85,
    'pig': 0.77
}

class ToonDNA(object):

    def __init__(self, toonType = 't', head = 'dls', torso = 'ss', legs = 's', gender = 'm',
                 armColor = 0, gloveColor = 0, legColor = 0, headColor = 0, topTex = 0,
                 topTexColor = 0, sleeveTex = 0, sleeveTexColor = 0, botTex = 0, botTexColor = 0):
        self.toonType = toonType
        self.head = head
        self.torso = torso
        self.legs = legs
        self.gender = gender
        self.armColor = armColor
        self.gloveColor = gloveColor
        self.legColor = legColor
        self.headColor = headColor
        self.topTex = topTex
        self.topTexColor = topTexColor
        self.sleeveTex = sleeveTex
        self.sleeveTexColor = sleeveTexColor
        self.botTex = botTex
        self.botTexColor = botTexColor

    def makeNetString(self):
        dg = Datagram()
        dg.addFixedString(self.toonType, 1)
        if self.toonType == 't':
            dg.add_uint8(toonHeadTypes.index(self.head))
            dg.add_uint8(toonTorsoTypes.index(self.torso))
            dg.add_uint8(toonLegTypes.index(self.legs))
            if self.gender == 'm':
                dg.add_uint8(1)
            else:
                dg.add_uint8(0)
            dg.add_uint8(self.topTex)
            dg.add_uint8(self.topTexColor)
            dg.add_uint8(self.sleeveTex)
            dg.add_uint8(self.sleeveTexColor)
            dg.add_uint8(self.botTex)
            dg.add_uint8(self.botTexColor)
            dg.add_uint8(self.armColor)
            dg.add_uint8(self.gloveColor)
            dg.add_uint8(self.legColor)
            dg.add_uint8(self.headColor)
        else:
            raise Exception(f'unknown avatar type: {self.toonType}')
        return dg.getMessage()

    def makeFromNetString(self, dnaString):
        dg = Datagram(dnaString)
        dgi = DatagramIterator(dg)

        self.toonType = dgi.getFixedString(1)

        if self.toonType != 't':
            raise Exception(f'unknown avatar type {self.toonType}')

        self.head = toonHeadTypes[dgi.getUint8()]
        self.torso = toonTorsoTypes[dgi.getUint8()]
        self.legs = toonLegTypes[dgi.getUint8()]
        self.gender = dgi.getUint8()
        if self.gender == 1:
            self.gender = 'm'
        else:
            self.gender = 'f'
        self.topTex = dgi.getUint8()
        self.topTexColor = dgi.getUint8()
        self.sleeveTex = dgi.getUint8()
        self.sleeveTexColor = dgi.getUint8()
        self.botTex = dgi.getUint8()
        self.botTexColor = dgi.getUint8()
        self.armColor = dgi.getUint8()
        self.gloveColor = dgi.getUint8()
        self.legColor = dgi.getUint8()
        self.headColor = dgi.getUint8()

    @staticmethod
    def randomDNA(seed=None, gender='m'):
        generator = random.Random(seed) if seed is not None else random
        legs = generator.choice(toonLegTypes + ['m', 'l', 'l', 'l'])
        gender = gender
        head = generator.choice(toonHeadTypes[:22])

        if gender == 'm':
            shirtStyle = generator.choice(['bss1', 'bss2'])
        else:
            shirtStyle = generator.choice(['gss1', 'gss2'])

        shirtStyle = ShirtStyles[shirtStyle]
        top, sleeve = shirtStyle[0], shirtStyle[1]
        topColor, sleeveColor = generator.choice(shirtStyle[2])

        if gender == 'm':
            bottomStyle = generator.choice(['bbs1', 'bbs2'])
        else:
            bottomStyle = generator.choice(['gsk1', 'gsh1'])

        styleList = BottomStyles[bottomStyle]
        bottom = styleList[0]
        bottomColor = generator.choice(styleList[1])

        if gender == 'm':
            bottom = styleList[0]
            torso = generator.choice(toonTorsoTypes[:3])
            color = generator.choice(defaultBoyColorList)
        else:
            torso = generator.choice(toonTorsoTypes[:6])
            if torso[1] == 'd':
                bottomStyle = generator.choice(['gsk1'])
                styleList = BottomStyles[bottomStyle]
                bottom = styleList[0]
                bottomColor = generator.choice(styleList[1])
            else:
                bottomStyle = generator.choice(['gsh1'])
                styleList = BottomStyles[bottomStyle]
                bottom = styleList[0]
                bottomColor = generator.choice(styleList[1])

            color = generator.choice(defaultGirlColorList)

        gloveColor = 0

        return ToonDNA('t', head, torso, legs, gender, color, gloveColor, color, color, top, topColor,
                       sleeve, sleeveColor, bottom, bottomColor)

    def getAnimal(self):
        if self.head[0] == 'd':
            return 'dog'
        elif self.head[0] == 'c':
            return 'cat'
        elif self.head[0] == 'm':
            return 'mouse'
        elif self.head[0] == 'h':
            return 'horse'
        elif self.head[0] == 'r':
            return 'rabbit'
        elif self.head[0] == 'f':
            return 'duck'
        elif self.head[0] == 'p':
            return 'monkey'
        elif self.head[0] == 'b':
            return 'bear'
        elif self.head[0] == 's':
            return 'pig'